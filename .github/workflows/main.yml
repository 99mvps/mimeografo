name: fly deploy

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  deploy_frontend:
    if: github.event.pull_request.merged == true
    name: deploy frontend
    runs-on: ubuntu-latest
    steps:
      - name: determine current directory
        id: dir
        run: echo "directory=$(pwd)" >> "$GITHUB_OUTPUT"

      - name: Debug Info
        run: |
          echo "Current directory: $(pwd)"
          echo "Current branch: $(git rev-parse --abbrev-ref HEAD)"

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup flyctl
        uses: superfly/flyctl-actions/setup-flyctl@v1

      - name: Deploy frontend
        if: ${{ steps.dir.outputs.directory }}/frontend
        run: |
          cd "${{ steps.dir.outputs.directory }}/frontend"
          flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN_FRONTEND }}

  deploy_service:
    if: github.event.pull_request.merged == true
    name: deploy service
    runs-on: ubuntu-latest
    steps:
      - name: determine current directory
        id: dir
        run: echo "directory=$(pwd)" >> "$GITHUB_OUTPUT"

      - name: Debug Info
        run: |
          echo "Current directory: $(pwd)"
          echo "Current branch: $(git rev-parse --abbrev-ref HEAD)"

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup flyctl
        uses: superfly/flyctl-actions/setup-flyctl@v1

      - name: Deploy service
        if: ${{ steps.dir.outputs.directory }}/service
        run: |
          cd "${{ steps.dir.outputs.directory }}/service"
          flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN_BACKEND }}
